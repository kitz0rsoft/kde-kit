diff -urN a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2016-05-15 21:09:48.000000000 -0300
+++ b/CMakeLists.txt	2016-05-16 23:43:03.000000000 -0300
@@ -30,7 +30,7 @@
    pattern.cpp
    kio_locate.cpp
    locater.cpp
-   KUrlCompat.cpp)
+   UrlUtils.cpp)
 
 qt5_wrap_ui(kio_locate_PART_SRCS
    klocateconfigfilterwidget.ui
diff -urN a/KUrlCompat.cpp b/KUrlCompat.cpp
--- a/KUrlCompat.cpp	2016-05-15 21:09:48.000000000 -0300
+++ b/KUrlCompat.cpp	1969-12-31 21:00:00.000000000 -0300
@@ -1,30 +0,0 @@
-#include <QString>
-#include <QUrlQuery>
-#include <QUrl>
-
-#include "KUrlCompat.h"
-
-void KUrlCompat::addQueryItem( const QString& _item, const QString& _value )
-{
-    QString item = _item + QLatin1Char('=');
-    QString value = QString::fromLatin1(QUrl::toPercentEncoding(_value));
-    
-    QUrlQuery 	query(*this);
-    query.addQueryItem(item, value);
-    setQuery(query);
-}
-
-QString KUrlCompat::queryItemValue( const QString& _item ) const
-{
-    QUrlQuery 	query(*this);
-    
-    return query.queryItemValue(_item.toUtf8());
-}
-
-void KUrlCompat::removeQueryItem(const QString &key)
-{
-    QUrlQuery 	query(*this);
-    
-    query.removeQueryItem(key);
-    setQuery(query);
-}
\ No newline at end of file
diff -urN a/KUrlCompat.h b/KUrlCompat.h
--- a/KUrlCompat.h	2016-05-15 21:09:48.000000000 -0300
+++ b/KUrlCompat.h	1969-12-31 21:00:00.000000000 -0300
@@ -1,13 +0,0 @@
-#include <QUrl>
-#include <QString>
-
-class KUrlCompat : public QUrl
-{
-  /*
-   * Do not add class scope variables. This class exists solely to provide convince rappers for deprecated functions.
-   */
- public:
-     void addQueryItem( const QString& _item, const QString& _value );
-     QString queryItemValue( const QString& _item ) const;
-     void removeQueryItem(const QString &key);
-};
\ No newline at end of file
diff -urN a/UrlUtils.cpp b/UrlUtils.cpp
--- a/UrlUtils.cpp	1969-12-31 21:00:00.000000000 -0300
+++ b/UrlUtils.cpp	2016-05-16 23:43:03.000000000 -0300
@@ -0,0 +1,30 @@
+#include <QString>
+#include <QUrlQuery>
+#include <QUrl>
+
+#include "UrlUtils.h"
+
+void UrlUtils::addQueryItem(QUrl& url, const QString& _item, const QString& _value )
+{
+    QString item = _item + QLatin1Char('=');
+    QString value = QString::fromLatin1(QUrl::toPercentEncoding(_value));
+    
+    QUrlQuery 	query(url);
+    query.addQueryItem(item, value);
+    url.setQuery(query);
+}
+
+QString UrlUtils::queryItemValue(const QUrl& url, const QString& _item )
+{
+    QUrlQuery 	query(url);
+    
+    return query.queryItemValue(_item.toUtf8());
+}
+
+void UrlUtils::removeQueryItem(QUrl& url, const QString &key)
+{
+    QUrlQuery 	query(url);
+    
+    query.removeQueryItem(key);
+    url.setQuery(query);
+}
\ No newline at end of file
diff -urN a/UrlUtils.h b/UrlUtils.h
--- a/UrlUtils.h	1969-12-31 21:00:00.000000000 -0300
+++ b/UrlUtils.h	2016-05-16 23:43:03.000000000 -0300
@@ -0,0 +1,13 @@
+#include <QUrl>
+#include <QString>
+
+class UrlUtils
+{
+  /*
+   * Do not add class scope variables. This class exists solely to provide convince rappers for some deprecated functions.
+   */
+ public:
+     static void addQueryItem(QUrl& url, const QString& _item, const QString& _value );
+     static QString queryItemValue(const QUrl& url, const QString& _item );
+     static void removeQueryItem(QUrl& url, const QString &key);
+};
\ No newline at end of file
diff -urN a/doc/en/index.docbook b/doc/en/index.docbook
--- a/doc/en/index.docbook	2016-05-15 21:09:48.000000000 -0300
+++ b/doc/en/index.docbook	2021-06-16 09:00:51.670665602 -0300
@@ -1,6 +1,6 @@
 <?xml version="1.0" ?>
-<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN"
-"dtd/kdex.dtd" [
+<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN"
+"dtd/kdedbx45.dtd" [
 <!ENTITY app "kio-locate">
 <!ENTITY app_version "0.5.0"> <!-- (V.MM.LL) -->
 <!ENTITY kio-locate "<application>&app;</application>">
diff -urN a/kio_locate.cpp b/kio_locate.cpp
--- a/kio_locate.cpp	2016-05-15 21:09:48.000000000 -0300
+++ b/kio_locate.cpp	2021-06-16 08:43:15.294390128 -0300
@@ -45,7 +45,7 @@
 #include <KIconThemes/KIconLoader>
 #include <KUser>
 #include <QFile>
-#include <kde_file.h>
+#include <qplatformdefs.h>
 
 using namespace KIO;
 
@@ -189,8 +189,8 @@
     entry.insert(KIO::UDSEntry::UDS_NAME, display);
 
     if (!path.isEmpty()) {
-        KDE_struct_stat info;
-        KDE_lstat(path.toLocal8Bit(), &info);
+        QT_STATBUF info;
+        QT_LSTAT(path.toLocal8Bit(), &info);
 
         entry.insert(KIO::UDSEntry::UDS_SIZE, info.st_size);
         entry.insert(KIO::UDSEntry::UDS_ACCESS, info.st_mode);
@@ -289,7 +289,7 @@
 	//Let QUrl remove the scheme for us.
         QString pattern = url.toString(QUrl::RemoveScheme | QUrl::PrettyDecoded);
 
-        KUrlCompat newUrl;
+        QUrl newUrl;
         newUrl.setScheme("locater");
 
         qDebug() << "Pattern: " << pattern;
@@ -302,23 +302,22 @@
             // Detect auto-completion from within konqueror and "stop"
             // this search.
             newUrl.setPath("autosearch");
-            newUrl.addQueryItem(queryQuery, pattern);
+            UrlUtils::addQueryItem(newUrl, queryQuery, pattern);
         } else if (url.scheme() == "rlocate") {
             // Standard regexp search.
             newUrl.setPath("search");
-            newUrl.addQueryItem(queryQuery, pattern);
-            newUrl.addQueryItem(queryRegExp, "1");
+            UrlUtils::addQueryItem(newUrl, queryQuery, pattern);
+            UrlUtils::addQueryItem(newUrl, queryRegExp, "1");
         } else {
             // Standard wildcard search.
             newUrl.setPath("search");
-            newUrl.addQueryItem(queryQuery, pattern);
+            UrlUtils::addQueryItem(newUrl, queryQuery, pattern);
         }
         m_url = newUrl;
 
         qDebug() << "Redirect: " << m_url << endl;
     } else {
-        //This is safe because no class variables are introduced by KUrlCompat and it solely inherits from QUrl.
-        m_url = reinterpret_cast<KUrlCompat&>(const_cast<QUrl&>(url));
+        m_url = url;
     }
     // Perhaps this will be unnecessary most times, but who knows...
     updateConfig();
@@ -462,17 +461,17 @@
 
     updateConfig();
 
-    QString query = m_url.queryItemValue(queryQuery);
-    m_locateDirectory = addTrailingSlash(m_url.queryItemValue(queryDirectory));
+    QString query = UrlUtils::queryItemValue(m_url, queryQuery);
+    m_locateDirectory = addTrailingSlash(UrlUtils::queryItemValue(m_url, queryDirectory));
 
-    QString caseSensitivity = m_url.queryItemValue(queryCase);
+    QString caseSensitivity = UrlUtils::queryItemValue(m_url, queryCase);
     if (caseSensitivity == "sensitive") {
         m_caseSensitivity = caseSensitive;
     } else if (caseSensitivity == "insensitive") {
         m_caseSensitivity = caseInsensitive;
     }
 
-    QString useRegExp = m_url.queryItemValue(queryRegExp);
+    QString useRegExp = UrlUtils::queryItemValue(m_url, queryRegExp);
     if (!useRegExp.isEmpty() && useRegExp != "0") {
         m_useRegExp = true;
     }
@@ -746,9 +745,9 @@
 
 QString LocateProtocol::makeLocaterUrl(const QString& directory)
 {
-    KUrlCompat url(m_url);
-    url.removeQueryItem(queryDirectory);
-    url.addQueryItem(queryDirectory, directory);
+    QUrl url(m_url);
+    UrlUtils::removeQueryItem(url, queryDirectory);
+    UrlUtils::addQueryItem(url, queryDirectory, directory);
     return url.url();
 }
 
diff -urN a/kio_locate.h b/kio_locate.h
--- a/kio_locate.h	2016-05-15 21:09:48.000000000 -0300
+++ b/kio_locate.h	2021-06-16 08:44:19.582670671 -0300
@@ -59,17 +59,13 @@
 #include <kio/global.h>
 #include <kio/slavebase.h>
 
-#include <kicon.h>
-
 #include "locater.h"
 #include "pattern.h"
-#include "KUrlCompat.h"
+#include "UrlUtils.h"
 #define KDE_EXPORT   __attribute__ ((visibility("default")))
 
 class QByteArray;
 class QUrl;
-class KUrlCompat;
-
 class LocateItem;
 class LocateDirectory;
 
@@ -144,7 +140,7 @@
 
  private:
 	Locater m_locater;
-	KUrlCompat m_url;
+	QUrl m_url;
 
 	QString m_locatePattern;
 	LocateRegExp m_locateRegExp;    // Equals m_locatePattern, but regexp.
diff -urN a/kio_locate.kcfg b/kio_locate.kcfg
--- a/kio_locate.kcfg	2016-05-15 21:09:48.000000000 -0300
+++ b/kio_locate.kcfg	2021-06-16 08:45:17.774922143 -0300
@@ -4,7 +4,7 @@
       xsi:schemaLocation="http://www.kde.org/standards/kcfg/1.0
                           http://www.kde.org/standards/kcfg/1.0/kcfg.xsd" >
 
-  <include>klocale.h</include>
+  <include>klocalizedstring.h</include>
   <kcfgfile name="kio_locaterc"/>
   <group name="General">
 	<entry name="caseSensitivity" type="Int">
